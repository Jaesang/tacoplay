---
- name: ensure jq package installed
  package:
    name: jq
    state: present

# where is docker python package used?
- name: ensure pip packages are installed
  pip:
    name:
      - yq
      - docker
    extra_args: --ignore-installed
  become: yes

- name: pull all images used in application manifests
  script: >-
    {{ playbook_dir | dirname }}/scripts/pull-images.sh
    {{ inventory_dir }}/{{ item }}-manifest.yaml
  args:
    creates: "/tmp/.{{ item }}-image-pull-done"
  when:
    - taco_apps and taco_apps|length > 0
  with_items: "{{ taco_apps }}"

- name: pull images provided by taco
  docker_image:
    name: "{{ item.repo }}:{{item.tag }}"
  with_items:
    - { repo: "{{ openstackclient_image_repo }}", tag: "{{ openstackclient_image_tag }}" }
    - { repo: "{{ armada_image_repo }}", tag: "{{ armada_image_tag }}" }
    - { repo: "{{ rbd_provisioner_image_repo }}", tag: "{{ rbd_provisioner_image_tag }}" }
    - { repo: "{{ container_registry_image_repo }}", tag: "{{ container_registry_image_tag }}" }
  become: yes

- name: pull helm v2 image for armada
  docker_image:
    name: "{{ item.repo }}:{{item.tag }}"
  with_items:
    - { repo: "{{ helm_image_repo }}", tag: "{{ helmv2_version }}" }
    - { repo: "{{ tiller_image_repo }}", tag: "{{ helmv2_version }}" }
  become: yes

- name: run registry container
  docker_container:
    name: taco-registry
    image: "{{ container_registry_image_repo }}:{{ container_registry_image_tag }}"
    restart_policy: always
    ports:
      - 5000:5000
    volumes:
      - "{{ container_registry_volume_relative_dir }}:/var/lib/registry"

- name: tag images
  script: "{{ playbook_dir | dirname }}/scripts/tag-images.sh"
  args:
    creates: /tmp/.image-tag-done

- name: push tagged images to registry
  script: "{{ playbook_dir | dirname }}/scripts/push-images.sh"
  args:
    creates: /tmp/.image-push-done

- name: archive registry image
  docker_image:
    name: "{{ container_registry_image_repo }}"
    tag: "{{ container_registry_image_tag }}"
    archive_path: "{{ container_registry_volume_relative_dir }}/registry.tar"

- name: bundle up tacoplay
  shell: tar cvfz tacoplay.tar.gz tacoplay/
  args:
    chdir: "{{ playbook_dir | dirname | dirname }}"
    creates: /tmp/.bundle-done
