---

- name: load modules for config drive
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - loop
    - vfat
  when: config_drive_enabled

- name: load vfio-pci module for pci passthrough
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - vfio-pci
  when: pci_passthrough_enabled

- name: ensures /tmp/manifests dir exists
  file: path=/tmp/manifests state=directory

- name: copy namespace, clusterrolebinding yml
  template:
    src: "{{item.file}}.j2"
    dest: "/tmp/manifests/{{item.file}}"
  with_items:
    - {name: "{{ openstack_namespace }}", file: namespace.yml, type: namespace}
    - {name: "{{ openstack_namespace }}", file: clusterrolebinding.yml, type: clusterrolebinding}
  register: openstack_manifests

- name: start k8s resources for taco
  kube:
    name: "{{item.item.name}}"
    kubectl: "{{bin_dir}}/kubectl"
    resource: "{{item.item.type}}"
    filename: "/tmp/manifests/{{item.item.file}}"
    state: "{{item.changed | ternary('latest','present') }}"
  with_items:
    - "{{ openstack_manifests.results }}"
  run_once: true
  become: no

- name: fetch mon hosts from ceph.conf
  shell: >-
    grep 'mon host' /etc/ceph/ceph.conf | awk '{print $4}'
  register: mon
  when: openstack_ceph_enabled and not (ceph_monitors|length > 0)

- name: set fact mon_host for armada-manifest.yml
  set_fact:
    mon_host: "{{ mon.stdout }}"
  when: openstack_ceph_enabled and mon.changed and mon.stdout != ""

- name: set fact mon_host for armada-manifest.yml
  set_fact:
    mon_host: "{{ ceph_monitors }}"
  when: openstack_ceph_enabled and (ceph_monitors|length > 0)

- name: failed to get ceph mon hosts
  fail:
    msg: "failed to get ceph mon hosts neither from vars nor ceph.conf"
  when: openstack_ceph_enabled and not (mon_host|length > 0)

- name: fetch admin keyring from ceph.client.admin.keyring
  shell: >-
    grep key /etc/ceph/ceph.client.admin.keyring | awk '{print $3}' | xargs echo -n
  register: keyring
  when: openstack_ceph_enabled and not (ceph_admin_keyring|length > 0)

- name: set fact ceph_admin_keyring for armada-manifest.yml
  set_fact:
    admin_keyring: "{{ keyring.stdout }}"
  when: openstack_ceph_enabled and keyring.changed and keyring.stdout != ""

- name: set fact ceph_admin_keyring for armada-manifest.yml
  set_fact:
    admin_keyring: "{{ ceph_admin_keyring }}"
  when: openstack_ceph_enabled and (ceph_admin_keyring|length > 0)

- name: failed to get ceph admin keyring
  fail:
    msg: "failed to get admin keyring neither from vars nor /etc/ceph"
  when: not (admin_keyring|length > 0) and openstack_ceph_enabled

- name: check armada-manifest.yml.j2 exists
  stat:
    path: "{{ inventory_dir }}/armada-manifest.yaml.j2"
  register: stat_result

- name: create armada-manifest.yml
  template:
    src: "{{ inventory_dir }}/armada-manifest.yaml.j2"
    dest: "{{ inventory_dir }}/armada-manifest.yaml"
  run_once: true
  when: stat_result.stat.exists
