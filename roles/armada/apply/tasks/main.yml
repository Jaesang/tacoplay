---
- include: prepare-manifest.yml

- include: render-manifest.yml
  when: taco_storage == 'ceph'

- name: delete test pods in openstack namespace
  shell: >-
    {{ bin_dir }}/kubectl get pods -n openstack | grep test |
    awk '{print $1}' | xargs {{ bin_dir }}/kubectl delete pods -n openstack
  ignore_errors: yes

- name: check host where tiller is running
  shell: >-
    {{ bin_dir }}/kubectl get pods -n kube-system -o json |
    jq -r '.items[] | select(.metadata.name|test("tiller")).status.hostIP'
  register: tiller_host
  become: no

- name: delete armada lock
  shell: >-
    {{ bin_dir }}/kubectl delete lock --all -n kube-system
  become: no
  ignore_errors: yes

- name: get existing armada processes
  shell: >-
    ps -ef | grep -v grep | grep -w 'armada apply' | awk '{print $2}'
  register: armada_processes
  become: no

- name: kill existing armada processes
  shell: kill {{ item }}
  with_items: "{{ armada_processes.stdout_lines }}"
  become: no

- name: wait until existing armada processes are killed
  wait_for:
    path: "/proc/{{ item }}/status"
    state: absent
  with_items: "{{ armada_processes.stdout_lines }}"

- name: run armada apply
  shell: >-
    . ~/.bashrc && workon armada &&
    {{ lookup('env','HOME') }}/venv/armada/bin/armada apply
    --tiller-host {{ tiller_host.stdout }}
    --tiller-port {{ tiller_port }}
    --timeout 9000
    {{ armada_manifest }} >
    {{ lookup('env','HOME') }}/armada.log
  when: auto_release_enabled|default(true) and tiller_host.stdout != ""
  become: no
  run_once: yes

- name: show armada apply usage for next try
  debug:
    msg: >-
      ". ~/.bashrc &&
      workon armada &&
      armada apply
      --tiller-host {{ tiller_host.stdout }}
      --tiller-port {{ tiller_port }}
      --timeout 3600
      {{ inventory_dir }}/armada-manifest.yaml"
  when: tiller_host.stdout != ""
