---
- name: RBD Provisioner | Remove legacy rbd_provisioner dir and manifests
  file:
    path: "/tmp/manifests/rbd_provisioner"
    state: absent

- name: RBD Provisioner | Remove legacy namespace
  shell: |
    {{ bin_dir }}/kubectl delete namespace {{ rbd_provisioner_namespace }}
  ignore_errors: yes
  become: no

- name: RBD Provisioner | Remove legacy storageclass
  shell: |
    {{ bin_dir }}/kubectl delete storageclass {{ rbd_provisioner_storage_class }}
  ignore_errors: yes
  become: no

- name: RBD Provisioner | Create rbd_provisioner dir
  file:
    path: "/tmp/manifests/rbd_provisioner"
    state: directory

- name: fetch mon hosts from ceph.conf if rbd_provisioner_monitors is empty
  shell: >-
    grep 'mon host' /etc/ceph/ceph.conf | awk '{print $4}'
  register: mon
  when: not (rbd_provisioner_monitors|length > 0)

- name: fetch mon hosts from rbd_provisioner_monitors
  shell: >-
    echo {{ rbd_provisioner_monitors }}
  register: mon
  when:
    - rbd_provisioner_monitors|length > 0
    - not (":6789" in rbd_provisioner_monitors)

- name: set rbd_provisioner_monitors for rbd storage class
  set_fact:
    rbd_provisioner_monitors: "{{ mon.stdout.split(',') | map('regex_replace', '(.*)', '\\1:6789') | join(',') }}"
  when: mon.changed and mon.stdout != ""

- name: fail getting ceph mon hosts
  fail:
    msg: "failed to get ceph mon hosts neither from vars nor ceph.conf"
  when: not (rbd_provisioner_monitors|length > 0)

- name: RBD Provisioner | Templates list
  set_fact:
    rbd_provisioner_templates:
      - { name: 00-namespace, file: 00-namespace.yml, type: ns }
      - { name: secret-rbd-provisioner, file: secret-rbd-provisioner.yml, type: secret }
      - { name: sa-rbd-provisioner, file: sa-rbd-provisioner.yml, type: sa }
      - { name: clusterrole-rbd-provisioner, file: clusterrole-rbd-provisioner.yml, type: clusterrole }
      - { name: clusterrolebinding-rbd-provisioner, file: clusterrolebinding-rbd-provisioner.yml, type: clusterrolebinding }
      - { name: role-rbd-provisioner, file: role-rbd-provisioner.yml, type: role }
      - { name: rolebinding-rbd-provisioner, file: rolebinding-rbd-provisioner.yml, type: rolebinding }
      - { name: deploy-rbd-provisioner, file: deploy-rbd-provisioner.yml, type: deploy }
      - { name: sc-rbd-provisioner, file: sc-rbd-provisioner.yml, type: sc }
    rbd_provisioner_templates_for_psp:
      - { name: psp-rbd-provisioner, file: psp-rbd-provisioner.yml, type: psp }

- name: RBD Provisioner | Append extra templates to RBD Provisioner Templates list for PodSecurityPolicy
  set_fact:
    rbd_provisioner_templates: "{{ rbd_provisioner_templates_for_psp + rbd_provisioner_templates }}"
  when:
    - podsecuritypolicy_enabled
    - rbd_provisioner_namespace != "kube-system"

- name: RBD Provisioner | Create manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "/tmp/manifests/rbd_provisioner/{{ item.file }}"
  with_items: "{{ rbd_provisioner_templates }}"
  register: rbd_provisioner_manifests

- name: RBD Provisioner | Apply manifests
  kube:
    name: "{{ item.item.name }}"
    namespace: "{{ rbd_provisioner_namespace }}"
    kubectl: "{{ bin_dir }}/kubectl"
    resource: "{{ item.item.type }}"
    filename: "/tmp/manifests/rbd_provisioner/{{ item.item.file }}"
    state: "latest"
  with_items: "{{ rbd_provisioner_manifests.results }}"
  run_once: true
  become: no
