---
# How to run this task also on ansible host node?
- name: registries | install rsync on ansible-host and registry nodes
  yum:
    name: rsync
    state: present
  when:
    - ansible_distribution in ["CentOS","RedHat"]

- name: registries | install python-pip on registry nodes
  yum:
    name: "{{ item }}"
    state: present
  loop:
    - epel-release
    - python-pip
  when:
    - ansible_distribution in ["CentOS","RedHat"]

- name: install python docker package 
  pip:
    name: "{{ item.name }}"
    version: "{{ item.version }}"
    state: present
  loop:
    - { name: 'docker', version: '3.5.1' }

- name: get registry image
  synchronize:
    src: "{{ container_registry_volume_dir }}/registry-2.6.2.tar"
    dest: "/tmp/registry-2.6.2.tar"

- name: load registry image from archive
  docker_image:
    name: "{{ container_registry_image.name }}"
    tag: "{{ container_registry_image.tag }}"
    load_path: "/tmp/registry-2.6.2.tar"
    state: present

- name: ensure docker volume mapping host directories exist
  file:
    state: directory
    path: "{{ item | regex_replace('^(?P<host>.+):(?P<container>.+):(?P<mode>.+)', '\\g<host>') }}"
  with_items:
    - "{{ container_registry_volume }}"

- name: unarchive registry volume
  unarchive:
    src: "{{ container_registry_volume_archive }}"
    dest: "{{ container_registry_volume }}"
  when: registry_volume_archived

- name: copy registry volume to local registry volume path
  synchronize:
    src: "{{ container_registry_volume_dir }}/"
    dest: "{{ container_registry_volume }}"
  when: not registry_volume_archived

- name: remove existing {{ container_registry_name }} container
  docker_container:
    image: "{{ container_registry_image }}"
    name: "{{ container_registry_name }}"
    state: absent

- name: run docker registry container
  docker_container:
    name: "{{ container_registry_name }}"
    image: "{{ container_registry_image }}"
    env: "{{ container_registry_env }}"
    exposed_ports: "{{ container_registry_expose }}"
    ports: "{{ container_registry_ports }}"
    volumes: "{{ container_registry_volume }}:/var/lib/registry"
    restart_policy: always
    state: started
