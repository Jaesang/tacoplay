---

- name: check host where ingress controller is running
  shell: >-
    {{ bin_dir }}/kubectl describe ep ingress -n openstack |
    grep Addresses |
    grep -v NotReady |
    awk '{split($2,a,",");print a[1]"\n"a[2]"\n"a[3]}' |
    awk NF
  retries: 20
  delay: 10
  register: ingress_host
  until: ingress_host.stdout != ""
  become: no
  delegate_to: "{{ groups['admin-node']|first }}"

- fail:
    msg: "ingress controller is not running"
  when: ingress_host.stdout == ""

- name: update hosts file for openstack services with ingress node ip
  blockinfile:
    path: /etc/hosts
    block: |
      {{ ingress_host.stdout }} keystone.openstack.svc.cluster.local
      {{ ingress_host.stdout }} glance.openstack.svc.cluster.local
      {{ ingress_host.stdout }} nova.openstack.svc.cluster.local
      {{ ingress_host.stdout }} neutron.openstack.svc.cluster.local
      {{ ingress_host.stdout }} cinder.openstack.svc.cluster.local
    state: present
    marker: "# OPENSTACK SERVICES {mark}"

- name: create the adminrc.env file in tmp directory
  template:
    dest: "/tmp/adminrc.env"
    src: adminrc.env.j2
  become: no

- name: pull the openstackclient image
  docker_image:
    name: "{{ openstackclient_image_name }}:{{ openstackclient_image_tag }}"
    source: pull

- name: create the os_client.sh file
  template:
    dest: "{{ lookup('env','HOME') }}/os_client.sh"
    src: os_client.sh.j2
    mode: 0755
  become: no
