---

- name: check host where tiller is running
  shell: >-
    {{ bin_dir }}/kubectl get pods -n kube-system -o json |
    jq -r '.items[] | select(.metadata.name|test("tiller")).status.hostIP'
  register: tiller_host
  become: no

- name: delete armada lock
  shell: >-
    {{ bin_dir }}/kubectl delete lock --all -n kube-system
  become: no
  ignore_errors: yes

- name: forcereinstall cryptography on centos (avoid docker pip package error)
  become: yes
  pip:
    name: cryptography
    state: forcereinstall
  when: ansible_distribution in ["CentOS","RedHat"]

- name: remove existing armada container
  docker_container:
    name: "armada"
    state: absent
  become: yes

- name: set docker.sock permission to 666
  become: yes
  file:
    path: /var/run/docker.sock
    mode: '0666'
  run_once: yes

- name: run armada docker container
  docker_container:
    name: "armada"
    image: "{{ armada_image_repo }}:{{ armada_image_tag }}"
    volumes:
      - "{{ lookup('env','HOME') }}/:{{ lookup('env','HOME') }}/"
      - "{{ lookup('env','HOME') }}/.kube:/root/.kube/"
      - "/tmp/:/tmp/"
      - "{{ lookup('env','HOME') }}/.netrc:/root/.netrc"
    dns_servers:
      - 8.8.8.8
    network_mode: host
    privileged: yes
    restart_policy: always
    state: started
  become: no

- name: run armada apply 
  shell: >-
    docker exec -u root armada armada apply
    --tiller-host {{ tiller_host.stdout }}
    --tiller-port {{ tiller_port }}
    --timeout 7200
    {{ inventory_dir }}/{{ item }}-manifest.yaml >
    /tmp/{{ item }}-deployment.log
  when:
    - tiller_host.stdout != ""
    - taco_apps and taco_apps|length > 0
  args:
    executable: /bin/bash
  run_once: yes
  with_items: "{{ taco_apps }}"

- name: show armada apply usage for next try
  debug:
    msg: >-
      "docker exec -u root armada armada apply
      --tiller-host {{ tiller_host.stdout }}
      --tiller-port {{ tiller_port }}
      --timeout 7200
      {{ inventory_dir }}/[YOUR_APP]-manifest.yaml"
  when: tiller_host.stdout != ""
