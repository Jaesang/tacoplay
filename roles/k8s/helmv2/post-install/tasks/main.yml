---
- name: check helm version of helm binary file
  shell: "{{ bin_dir }}/helm version --short --client | grep -o 'v[0-9]'"
  register: helm_binary_version

- name: copy helm2 binary to ansible host
  fetch:
    src: "{{ bin_dir }}/helm"
    dest: "{{ artifacts_dir }}/helm2"
    flat: yes
    validate_checksum: no
  become: no
  delegate_to: "{{ groups['kube-master']|first }}"
  when: helm_binary_version.stdout == "v2"

- name: copy helm2 to bin_dir
  copy:
    src: "{{ artifacts_dir }}/helm2"
    dest: "{{ bin_dir }}/helm2"
    mode: 0755
  when: helm_binary_version.stdout == "v2"

# install helm v2tov3 plugin 
- name: check helm configuration directory
  stat:
    path: "{{ lookup('env','HOME') }}/.helm"
  become: no
  register: check_dir
  when:
    - inventory_hostname in groups['admin-node']

- name: helmv2 init with clien only
  shell: "{{ bin_dir }}/helm2 init --client-only --skip-refresh"
  become: no
  when:
    - inventory_hostname in groups['admin-node']
    - check_dir.stat.exists == false

- name: download helm 2to3 plugin
  get_url:
    url: "{{ helm_2to3_plugin_download_url }}"
    dest: "/tmp/helm-2to3_0.5.1_linux_amd64.tar.gz"
    checksum: "{{ 'sha256:' + helm_2to3_checksum }}"
  become: no
  when:
    - inventory_hostname in groups['admin-node']

- name: ensure helm-2to3 directory exists
  file:
    path: "/tmp/helm-2to3"
    state: directory
  become: no
  when:
    - inventory_hostname in groups['admin-node']

- name: extract helm 2to3 plugin
  unarchive:
    src: "/tmp/helm-2to3_0.5.1_linux_amd64.tar.gz"
    dest: "/tmp/helm-2to3"
    copy: no
  become: no
  when:
    - inventory_hostname in groups['admin-node']

- name: copy custom install script for offline env
  copy:
    src: "install_plugin.sh"
    dest: "/tmp/helm-2to3/scripts"
  become: no
  when:
    - inventory_hostname in groups['admin-node']

- name: install helm 2to3 plugin
  shell: "{{ bin_dir }}/helm2 plugin install /tmp/helm-2to3"
  become: no
  ignore_errors: True
  when:
    - inventory_hostname in groups['admin-node']
