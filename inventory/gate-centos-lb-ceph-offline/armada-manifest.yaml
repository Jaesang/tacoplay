---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: helm-toolkit
data:
  chart_name: helm-toolkit
  release: helm-toolkit
  namespace: helm-tookit
  values: {}
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm-infra
    subpath: helm-toolkit
    reference: master
  dependencies: []
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: ceph-provisioners
data:
  chart_name: ceph-provisioners
  release: ceph-provisioners
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        ceph_config_helper: VM-NAME-1:5000/port/ceph-config-helper:v1.15.3
    deployment:
      ceph: false
      client_secrets: true
      rbd_provisioner: false
      cephfs_provisioner: false
    storageclass:
      rbd:
        provision_storage_class: false
      cephfs:
        provision_storage_class: false
    conf:
      ceph:
        global:
          mon_host: TACO_MON_HOST
    manifests:
      configmap_bin: false
      configmap_bin_common: false
      configmap_etc: true
      deployment_rbd_provisioner: false
      deployment_cephfs_provisioner: false
      job_bootstrap: false
      job_cephfs_client_key: false
      job_image_repo_sync: false
      job_namespace_client_key_cleaner: false
      job_namespace_client_key: false
      storageclass_cephfs: false
      storageclass_rbd: false
      helm_tests: false
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm-infra
    subpath: ceph-provisioners
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: cinder
data:
  chart_name: cinder
  release: cinder
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
      - name: cinder-bootstrap
        type: job
        labels:
          application: cinder
          component: bootstrap
      - name: cinder-db-init
        type: job
        labels:
          application: cinder
          component: db-init
      - name: cinder-db-sync
        type: job
        labels:
          application: cinder
          component: db-sync
      - name: cinder-ks-endpoints
        type: job
        labels:
          application: cinder
          component: ks-endpoints
      - name: cinder-ks-service
        type: job
        labels:
          application: cinder
          component: ks-service
      - name: cinder-ks-user
        type: job
        labels:
          application: cinder
          component: ks-user
  values:
    images:
      tags:
        test: VM-NAME-1:5000/stein/ubuntu-source-rally:taco-0.1.0
        db_init: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        cinder_db_sync: VM-NAME-1:5000/stein/ubuntu-source-cinder-api:taco-0.1.0
        db_drop: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        rabbit_init: VM-NAME-1:5000/rabbitmq:3.7-management
        ks_user: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_service: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_endpoints: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        cinder_api: VM-NAME-1:5000/stein/ubuntu-source-cinder-api:taco-0.1.0
        bootstrap: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        cinder_scheduler: VM-NAME-1:5000/stein/ubuntu-source-cinder-scheduler:taco-0.1.0
        cinder_volume: VM-NAME-1:5000/stein/ubuntu-source-cinder-volume:taco-0.1.0
        cinder_volume_usage_audit: VM-NAME-1:5000/stein/ubuntu-source-cinder-volume:taco-0.1.0
        cinder_storage_init: VM-NAME-1:5000/port/ceph-config-helper:v1.15.3
        cinder_backup: VM-NAME-1:5000/stein/ubuntu-source-cinder-backup:taco-0.1.0
        cinder_backup_storage_init: VM-NAME-1:5000/port/ceph-config-helper:v1.15.3
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: IfNotPresent
    pod:
      security_context:
        cinder_api:
          pod:
            runAsUser: 42407
        cinder_backup:
          pod:
            runAsUser: 42407
        cinder_scheduler:
          pod:
            runAsUser: 42407
        cinder_volume:
          pod:
            runAsUser: 42407
      replicas:
        api: 3
        backup: 1
        scheduler: 3
        volume: 1
    conf:
      logging:
        loggers:
          keys:
          - root
          - cinder
          - oslo_service
        logger_oslo_service:
          level: DEBUG
          handlers: stderr
          qualname: oslo_service
        logger_cinder:
          level: DEBUG
      ceph:
        admin_keyring: TACO_ADMIN_KEYRING
        enabled: true
        pools:
          backups:
            replication: 1
            crush_rule: replicated_rule
            chunk_size: 128
            app_name: cinder-backup
          volumes:
            replication: 1
            crush_rule: replicated_rule
            chunk_size: 128
            app_name: cinder-volume
      cinder:
        DEFAULT:
          backup_driver: cinder.backup.drivers.ceph.CephBackupDriver
          backup_ceph_user: cinder-backup
          backup_ceph_pool: backups
      backends:
        rbd1:
          rbd_pool: volumes
          rbd_secret_uuid: 582393ff-9a5c-4a2e-ae0d-86ec18c36afc
    endpoints:
      oslo_db:
        auth:
          admin:
            username: root
            password: password
          cinder:
            username: cinder
            password: password
      oslo_messaging:
        auth:
          admin:
            username: rabbitmq
            password: password
          cinder:
            username: cinder
            password: password
        statefulset: null
      identity:
        auth:
          admin:
            username: admin
            password: password
          cinder:
            username: cinder
            password: password
      volume:
        path:
          default: /v2/%(tenant_id)s
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm
    subpath: cinder
    reference: master
  test:
    enabled: false
    timeout: 3600
  dependencies:
  - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: glance
data:
  chart_name: glance
  release: glance
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
      - name: glance-bootstrap
        type: job
        labels:
          application: glance
          component: bootstrap
      - name: glance-storage-init
        type: job
        labels:
          application: glance
          component: storage-init
      - name: glance-db-init
        type: job
        labels:
          application: glance
          component: db-init
      - name: glance-db-sync
        type: job
        labels:
          application: glance
          component: db-sync
      - name: glance-ks-endpoints
        type: job
        labels:
          application: glance
          component: ks-endpoints
      - name: glance-ks-service
        type: job
        labels:
          application: glance
          component: ks-service
      - name: glance-ks-user
        type: job
        labels:
          application: glance
          component: ks-user
  values:
    images:
      tags:
        test: VM-NAME-1:5000/stein/ubuntu-source-rally:taco-0.1.0
        glance_storage_init: VM-NAME-1:5000/port/ceph-config-helper:v1.15.3
        glance_metadefs_load: VM-NAME-1:5000/stein/ubuntu-source-glance-api:taco-0.1.0
        db_init: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        glance_db_sync: VM-NAME-1:5000/stein/ubuntu-source-glance-api:taco-0.1.0
        db_drop: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_user: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_service: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_endpoints: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        rabbit_init: VM-NAME-1:5000/rabbitmq:3.7-management
        glance_api: VM-NAME-1:5000/stein/ubuntu-source-glance-api:taco-0.1.0
        glance_registry: VM-NAME-1:5000/stein/ubuntu-source-glance-registry:taco-0.1.0
        bootstrap: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: IfNotPresent
    pod:
      security_context:
        glance:
          pod:
            runAsUser: 42415
      replicas:
        api: 3
        registry: 1
    network:
      api:
        ingress:
          annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: 102400M
    storage: rbd
    conf:
      ceph:
        enabled: true
        admin_keyring: TACO_ADMIN_KEYRING
      glance:
        glance_store:
          rbd_store_replication: 1
          rbd_store_user: glance
          rbd_store_pool: images
        DEFAULT:
          show_image_direct_url: true
          show_multiple_locations: true
      rally_tests:
        tests:
          GlanceImages.create_and_delete_image:
            - args:
                container_format: bare
                disk_format: qcow2
                image_location: http://192.168.197.39:8888/cirros/cirros-0.4.0-x86_64-disk.img
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          GlanceImages.create_and_list_image:
            - args:
                container_format: bare
                disk_format: qcow2
                image_location: http://192.168.197.39:8888/cirros/cirros-0.4.0-x86_64-disk.img
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
    bootstrap:
      enabled: true
      structured:
        images:
          cirros:
            name: Cirros 0.4.0 64-bit
            id: 201084fc-c276-4744-8504-cb974dbb3610
            source_url: http://192.168.197.39:8888/cirros/
            image_file: cirros-0.4.0-x86_64-disk.img
            private: false
    endpoints:
      identity:
        auth:
          admin:
            username: admin
            password: password
          glance:
            username: glance
            password: password
      oslo_db:
        auth:
          admin:
            username: root
            password: password
          glance:
            username: glance
            password: password
      oslo_messaging:
        auth:
          admin:
            username: rabbitmq
            password: password
          glance:
            username: glance
            password: password
        statefulset: null
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm
    subpath: glance
    reference: master
  test:
    enabled: false
    timeout: 3600
  dependencies:
  - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: heat
data:
  chart_name: heat
  release: heat
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
        - type: job
          labels:
            application: heat
            component: bootstrap
        - type: job
          labels:
            application: heat
            component: db-init
        - type: job
          labels:
            application: heat
            component: db-sync
        - type: job
          labels:
            application: heat
            component: ks-user
        - type: job
          labels:
            application: heat
            component: ks-service
        - type: job
          labels:
            application: heat
            component: ks-endpoints
        - type: job
          labels:
            application: heat
            component: trusts
  values:
    images:
      tags:
        test: VM-NAME-1:5000/stein/ubuntu-source-rally:taco-0.1.0
        bootstrap: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        db_init: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        heat_db_sync: VM-NAME-1:5000/stein/ubuntu-source-heat-api:taco-0.1.0
        db_drop: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_user: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_service: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_endpoints: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        heat_api: VM-NAME-1:5000/stein/ubuntu-source-heat-api:taco-0.1.0
        heat_cfn: VM-NAME-1:5000/stein/ubuntu-source-heat-api:taco-0.1.0
        heat_cloudwatch: VM-NAME-1:5000/stein/ubuntu-source-heat-api:taco-0.1.0
        heat_engine: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        heat_engine_cleaner: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        rabbit_init: VM-NAME-1:5000/rabbitmq:3.7-management
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        heat_purge_deleted: VM-NAME-1:5000/openstackhelm/heat:ocata-ubuntu_xenial
      pull_policy: IfNotPresent
    pod:
      security_context:
        heat:
          pod:
            runAsUser: 42418
      replicas:
        api: 3
        cfn: 3
        cloudwatch: 3
        engine: 3
    endpoints:
      identity:
        auth:
          admin:
            username: admin
            password: password
          heat:
            username: heat
            password: password
          heat_trustee:
            username: heat-trust
            password: password
          heat_stack_user:
            username: heat-domain
            password: password
      oslo_db:
        auth:
          admin:
            username: root
            password: password
          heat:
            username: heat
            password: password
      oslo_messaging:
        auth:
          admin:
            username: rabbitmq
            password: password
          heat:
            username: heat
            password: password
        statefulset: null
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm
    subpath: heat
    reference: master
  test:
      enabled: false
      timeout: 3600
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: horizon
data:
  chart_name: horizon
  release: horizon
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
      - type: job
        labels:
          application: horizon
          component: db-init
      - type: job
        labels:
          application: horizon
          component: db-sync
  values:
    images:
      tags:
        db_init: VM-NAME-1:5000/stein/ubuntu-source-horizon:taco-0.1.0
        db_drop: VM-NAME-1:5000/stein/ubuntu-source-horizon:taco-0.1.0
        horizon_db_sync: VM-NAME-1:5000/stein/ubuntu-source-horizon:taco-0.1.0
        horizon: VM-NAME-1:5000/stein/ubuntu-source-horizon:taco-0.1.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
        dep_check: VM-NAME-1:5000/stackanetes/kubernetes-entrypoint:v1.0.0
        test: VM-NAME-1:5000/openstackhelm/osh-selenium:latest-ubuntu_bionic
      pull_policy: IfNotPresent
    pod:
      security_context:
        horizon:
          pod:
            runAsUser: 42420
      replicas:
        server: 3
    network:
      node_port:
        enabled: true
        port: 31000
    conf:
      software:
        apache2:
          site_dir: /etc/apache2/sites-enabled
      horizon:
        apache: |
          Listen 0.0.0.0:{{ tuple "dashboard" "internal" "web" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}

          LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
          LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" proxy

          SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
          CustomLog /dev/stdout combined env=!forwarded
          CustomLog /dev/stdout proxy env=forwarded

          <VirtualHost *:{{ tuple "dashboard" "internal" "web" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}>
              WSGIScriptReloading On
              WSGIDaemonProcess horizon-http processes=5 threads=1 user=horizon group=horizon display-name=%{GROUP} python-path=/var/lib/kolla/venv/lib/python2.7/site-packages
              WSGIProcessGroup horizon-http
              WSGIScriptAlias / /var/www/cgi-bin/horizon/django.wsgi
              WSGIPassAuthorization On
              RewriteEngine on
              RewriteCond %{REQUEST_METHOD} !^(POST|PUT|GET|DELETE)
              RewriteRule .* - [F]

              <Location "/">
                  Require all granted
              </Location>

              Alias /static /var/www/html/horizon
              <Location "/static">
                  SetHandler None
              </Location>

              <IfVersion >= 2.4>
                ErrorLogFormat "%{cu}t %M"
              </IfVersion>
              ErrorLog /dev/stdout
              TransferLog /dev/stdout

              SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
              CustomLog /dev/stdout combined env=!forwarded
              CustomLog /dev/stdout proxy env=forwarded
          </Virtualhost>
        local_settings:
          config:
            openstack_neutron_network:
              enable_router: "True"
              enable_quotas: "True"
              enable_ipv6: "False"
              enable_distributed_router: "False"
              enable_ha_router: "True"
              enable_lb: "True"
              enable_firewall: "False"
              enable_vpn: "False"
              enable_fip_topology_check: "True"
    endpoints:
      oslo_db:
        auth:
          admin:
            username: root
            password: password
          horizon:
            username: horizon
            password: password
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm
    subpath: horizon
    reference: master
  dependencies:
  - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: ingress
data:
  chart_name: ingress
  release: ingress
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        entrypoint: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        ingress: VM-NAME-1:5000/kubernetes-ingress-controller/nginx-ingress-controller:0.23.0
        ingress_module_init: VM-NAME-1:5000/stein/ubuntu-source-neutron-server:taco-0.1.0
        ingress_routed_vip: VM-NAME-1:5000/stein/ubuntu-source-neutron-server:taco-0.1.0
        error_pages: VM-NAME-1:5000/google_containers/defaultbackend:1.0
        keepalived: VM-NAME-1:5000/keepalived:1.4.5
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: IfNotPresent
    network:
      host_namespace: true
    monitoring:
      prometheus:
        enabled: false
        ingress_exporter:
          scrape: false
        config:
          worker-processes: 8
    config:
      worker-processes: 8
    pod:
      replicas:
        ingress: 3
        error_page: 1
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm-infra
    subpath: ingress
    reference: master
  dependencies:
  - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: keystone
data:
  chart_name: keystone
  release: keystone
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
        - name: keystone-bootstrap
          type: job
          labels:
            application: keystone
            component: bootstrap
        - name: keystone-credential-setup
          type: job
          labels:
            application: keystone
            component: credential-setup
        - name: keystone-db-init
          type: job
          labels:
            application: keystone
            component: db-init
        - name: keystone-db-sync
          type: job
          labels:
            application: keystone
            component: db-sync
        - name: keystone-fernet-setup
          type: job
          labels:
            application: keystone
            component: fernet-setup
        - name: keystone-domain-manage
          type: job
          labels:
            application: keystone
            component: domain-manage
  values:
    images:
      tags:
        bootstrap: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        test: VM-NAME-1:5000/stein/ubuntu-source-rally:taco-0.1.0
        db_init: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        keystone_db_sync: VM-NAME-1:5000/stein/ubuntu-source-keystone:taco-0.1.0
        db_drop: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_user: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        rabbit_init: VM-NAME-1:5000/rabbitmq:3.7-management
        keystone_fernet_setup: VM-NAME-1:5000/stein/ubuntu-source-keystone:taco-0.1.0
        keystone_fernet_rotate: VM-NAME-1:5000/stein/ubuntu-source-keystone:taco-0.1.0
        keystone_credential_setup: VM-NAME-1:5000/stein/ubuntu-source-keystone:taco-0.1.0
        keystone_credential_rotate: VM-NAME-1:5000/stein/ubuntu-source-keystone:taco-0.1.0
        keystone_credential_cleanup: VM-NAME-1:5000/openstackhelm/heat:ocata-ubuntu_xenial
        keystone_api: VM-NAME-1:5000/stein/ubuntu-source-keystone:taco-0.1.0
        keystone_domain_manage: VM-NAME-1:5000/stein/ubuntu-source-keystone:taco-0.1.0
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: IfNotPresent
    conf:
      keystone:
        DEFAULT:
          debug: true
    pod:
      security_context:
        keystone:
          pod:
            runAsUser: 42425
      replicas:
        api: 3
    endpoints:
      identity:
        auth:
          admin:
            username: admin
            password: password
      oslo_db:
        auth:
          admin:
            username: root
            password: password
          keystone:
            username: keystone
            password: password
      oslo_messaging:
        auth:
          admin:
            username: rabbitmq
            password: password
          keystone:
            username: keystone
            password: password
        statefulset: null
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm
    subpath: keystone
    reference: master
  test:
      enabled: false
      timeout: 3600
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: libvirt
data:
  chart_name: libvirt
  release: libvirt
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    release_group: null
    images:
      tags:
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        libvirt: VM-NAME-1:5000/stein/ubuntu-source-nova-libvirt:taco-0.1.0
      pull_policy: IfNotPresent
    network:
      backend:
      - linuxbridge
    conf:
      ceph:
        enabled: true
        admin_keyring: TACO_ADMIN_KEYRING
        cinder:
          keyring: AQAin8tU0CFgEhAATb7sYgtWsh+S5HEbg6MrGg==
          secret_uuid: 582393ff-9a5c-4a2e-ae0d-86ec18c36afc
      libvirt:
        listen_addr: 0.0.0.0
        log_level: 3
    manifests:
      configmap_bin: true
      configmap_etc: true
      daemonset_libvirt: true
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm-infra
    subpath: libvirt
    reference: master
  dependencies:
  - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: mariadb
data:
  chart_name: mariadb
  release: mariadb
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
      - name: exporter-create-sql-user
        type: job
        labels:
          application: prometheus_mysql_exporter
          component: create-sql-user
  values:
    images:
      tags:
        mariadb: VM-NAME-1:5000/openstackhelm/mariadb:10.2.18
        mariadb_backup: VM-NAME-1:5000/openstackhelm/mariadb:latest-ubuntu_xenial
        scripted_test: VM-NAME-1:5000/penstackhelm/mariadb:latest-ubuntu_xenial
        ingress: VM-NAME-1:5000/kubernetes-ingress-controller/nginx-ingress-controller:0.9.0
        error_pages: VM-NAME-1:5000/google_containers/defaultbackend:1.0
        prometheus_create_mysql_user: VM-NAME-1:5000/mariadb:10.2.13
        prometheus_mysql_exporter: VM-NAME-1:5000/prom/mysqld-exporter:v0.10.0
        prometheus_mysql_exporter_helm_tests: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: IfNotPresent
    pod:
      replicas:
        server: 3
    volume:
      enabled: true
      class_name: rbd
    endpoints:
      oslo_db:
        auth:
          admin:
            username: root
            password: password
    monitoring:
      prometheus:
        enabled: false
        mysqld_exporter:
          scrape: false
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm-infra
    subpath: mariadb
    reference: master
  test:
    enabled: false
    timeout: 3600
  dependencies:
  - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: memcached
data:
  chart_name: memcached
  release: memcached
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        memcached: VM-NAME-1:5000/memcached:1.5.5
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        prometheus_memcached_exporter: VM-NAME-1:5000/memcached-exporter:v0.4.1
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: IfNotPresent
    pod:
      replicas:
        server: 3
    monitoring:
      prometheus:
        enabled: false
        memcached_exporter:
          scrape: false
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm-infra
    subpath: memcached
    reference: master
  dependencies:
  - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: neutron
data:
  chart_name: neutron
  release: neutron
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
      - name: neutron-db-init
        type: job
        labels:
          application: neutron
          component: db-init
      - name: neutron-db-sync
        type: job
        labels:
          application: neutron
          component: db-sync
      - name: neutron-ks-endpoints
        type: job
        labels:
          application: neutron
          component: ks-endpoints
      - name: neutron-ks-service
        type: job
        labels:
          application: neutron
          component: ks-service
      - name: neutron-ks-user
        type: job
        labels:
          application: neutron
          component: ks-user
  values:
    images:
      tags:
        bootstrap: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        test: VM-NAME-1:5000/stein/ubuntu-source-rally:taco-0.1.0
        purge_test: VM-NAME-1:5000/openstackhelm/ospurge:latest
        db_init: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        neutron_db_sync: VM-NAME-1:5000/stein/ubuntu-source-neutron-server:taco-0.1.0
        db_drop: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_user: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_service: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_endpoints: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        neutron_server: VM-NAME-1:5000/stein/ubuntu-source-neutron-server:taco-0.1.0
        neutron_dhcp: VM-NAME-1:5000/stein/ubuntu-source-neutron-dhcp-agent:taco-0.1.0
        neutron_metadata: VM-NAME-1:5000/stein/ubuntu-source-neutron-metadata-agent:taco-0.1.0
        neutron_l3: VM-NAME-1:5000/stein/ubuntu-source-neutron-l3-agent:taco-0.1.0
        neutron_openvswitch_agent: VM-NAME-1:5000/stein/ubuntu-source-neutron-openvswitch-agent:taco-0.1.0
        neutron_linuxbridge_agent: VM-NAME-1:5000/stein/ubuntu-source-neutron-linuxbridge-agent:taco-0.1.0
        neutron_sriov_agent: VM-NAME-1:5000/stein/ubuntu-source-neutron-sriov-agent:taco-0.1.0
        neutron_bagpipe_bgp: VM-NAME-1:5000/stein/ubuntu-source-neutron-server:taco-0.1.0
        neutron_ironic_agent: VM-NAME-1:5000/stein/ubuntu-source-neutron-server:taco-0.1.0
        neutron_l2gw: VM-NAME-1:5000/stein/ubuntu-source-neutron-server:taco-0.1.0
        rabbit_init: VM-NAME-1:5000/rabbitmq:3.7-management
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
      pull_policy: IfNotPresent
    pod:
      replicas:
        server: 3
      user:
        neutron:
          uid: 42435
      security_context:
        neutron:
          pod:
            runAsUser: 42435
        neutron_dhcp_agent:
          pod:
            runAsUser: 42435
          container:
            neutron_dhcp_agent:
              readOnlyRootFilesystem: false
        neutron_l2gw_agent:
          pod:
            runAsUser: 42435
        neutron_bagpipe_bgp:
          pod:
            runAsUser: 42435
        neutron_l3_agent:
          pod:
            runAsUser: 42435
          container:
            neutron_l3_agent:
              readOnlyRootFilesystem: false
        neutron_lb_agent:
          pod:
            runAsUser: 42435
          container:
            neutron_lb_agent:
              readOnlyRootFilesystem: false
        neutron_metadata_agent:
          pod:
            runAsUser: 42435
        neutron_ovs_agent:
          pod:
            runAsUser: 42435
        neutron_server:
          pod:
            runAsUser: 42435
          container:
            neutron_server:
              readOnlyRootFilesystem: false
        neutron_sriov_agent:
          pod:
            runAsUser: 42435
      probes:
        dhcp_agent:
          dhcp_agent:
            readiness:
              enabled: false
            liveness:
              enabled: false
        l3_agent:
          l3_agent:
            readiness:
              enabled: false
            liveness:
              enabled: false
        metadata_agent:
          metadata_agent:
            readiness:
              enabled: false
            liveness:
              enabled: false
        ovs_agent:
          ovs_agent:
            liveness:
              enabled: false
        sriov_agent:
          sriov_agent:
            readiness:
              enabled: false
    network:
      backend:
      - linuxbridge
      share_namespaces: true
      auto_bridge_add:
        br-ex: null
      interface:
        tunnel: eth2
    conf:
      paste:
        composite:neutronapi_v2_0:
          keystone: cors http_proxy_to_wsgi request_id catch_errors authtoken keystonecontext extensions neutronapiapp_v2_0
        app:neutronversions:
          paste.app_factory: neutron.pecan_wsgi.app:versions_factory
      neutron_sudoers: |
        # This sudoers file supports rootwrap-daemon for both Kolla and LOCI Images.
        Defaults !requiretty
        Defaults secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/var/lib/openstack/bin:/var/lib/kolla/venv/bin"
        neutron ALL = (root) NOPASSWD: /var/lib/kolla/venv/bin/neutron-rootwrap /etc/neutron/rootwrap.conf *, /var/lib/openstack/bin/neutron-rootwrap /etc/neutron/rootwrap.conf *, /var/lib/kolla/venv/bin/neutron-rootwrap-daemon /etc/neutron/rootwrap.conf, /var/lib/openstack/bin/neutron-rootwrap-daemon /etc/neutron/rootwrap.conf, /var/lib/kolla/venv/bin/privsep-helper /etc/neutron/rootwrap.conf *
      neutron:
        DEFAULT:
          core_plugin: ml2
          l3_ha: true
          global_physnet_mtu: 1500
          service_plugins: router
        agent:
          root_helper: sudo /var/lib/kolla/venv/bin/neutron-rootwrap /etc/neutron/rootwrap.conf
        placement:
          auth_version: v3
          auth_type: password
          auth_uri: http://keystone-api.openstack.svc.cluster.local:5000/v3
          auth_url: http://keystone-api.openstack.svc.cluster.local:5000/v3
          endpoint_type: internal
          project_domain_name: service
          project_name: service
          user_domain_name: service
          region_name: RegionOne
          password: password
          username: nova
      plugins:
        ml2_conf:
          ml2:
            mechanism_drivers: linuxbridge,l2population
            type_drivers: flat, vxlan
            tenant_network_types: vxlan
          ml2_type_flat:
            flat_networks: provider
        linuxbridge_agent:
          linux_bridge:
            physical_interface_mappings: provider:eth1
            bridge_mappings: ""
          securitygroup:
            firewall_driver: iptables
    endpoints:
      oslo_db:
        auth:
          admin:
            username: root
            password: password
          neutron:
            username: neutron
            password: password
      oslo_messaging:
        auth:
          admin:
            username: rabbitmq
            password: password
          neutron:
            username: neutron
            password: password
        statefulset: null
      identity:
        name: keystone
        auth:
          admin:
            username: admin
            password: password
          neutron:
            username: neutron
            password: password
          nova:
            username: nova
            password: password
    manifests:
      daemonset_lb_agent: true
      daemonset_dhcp_agent: true
      daemonset_metadata_agent: true
      daemonset_ovs_agent: false
      daemonset_sriov_agent: false
      daemonset_l3_agent: true
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm
    subpath: neutron
    reference: master
  test:
    enabled: false
    timeout: 3600
  dependencies:
  - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: nova
data:
  chart_name: nova
  release: nova
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
      - name: nova-bootstrap
        type: job
        labels:
          application: nova
          component: bootstrap
      - name: nova-cell-setup
        type: job
        labels:
          application: nova
          component: cell-setup
      - name: nova-db-init
        type: job
        labels:
          application: nova
          component: db-init
      - name: nova-db-sync
        type: job
        labels:
          application: nova
          component: db-sync
      - name: nova-ks-endpoints
        type: job
        labels:
          application: nova
          component: ks-endpoints
      - name: nova-ks-service
        type: job
        labels:
          application: nova
          component: ks-service
      - name: nova-ks-user
        type: job
        labels:
          application: nova
          component: ks-user
      - name: placement-ks-endpoints
        type: job
        labels:
          application: placement
          component: ks-endpoints
      - name: placement-ks-service
        type: job
        labels:
          application: placement
          component: ks-service
      - name: placement-ks-user
        type: job
        labels:
          application: placement
          component: ks-user
  values:
    images:
      tags:
        test: VM-NAME-1:5000/stein/ubuntu-source-rally:taco-0.1.0
        db_drop: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        db_init: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_user: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_service: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        ks_endpoints: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        nova_api: VM-NAME-1:5000/stein/ubuntu-source-nova-api:taco-0.1.0
        nova_cell_setup: VM-NAME-1:5000/stein/ubuntu-source-nova-api:taco-0.1.0
        nova_cell_setup_init: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        nova_compute: VM-NAME-1:5000/stein/ubuntu-source-nova-compute:taco-0.1.0
        nova_compute_ironic: VM-NAME-1:5000/stein/ubuntu-source-nova-compute-stein-ironic:taco-0.1.0
        nova_compute_ssh: VM-NAME-1:5000/stein/ubuntu-source-nova-ssh:taco-0.1.0
        nova_conductor: VM-NAME-1:5000/stein/ubuntu-source-nova-conductor:taco-0.1.0
        nova_consoleauth: VM-NAME-1:5000/stein/ubuntu-source-nova-consoleauth:taco-0.1.0
        nova_db_sync: VM-NAME-1:5000/stein/ubuntu-source-nova-api:taco-0.1.0
        nova_novncproxy: VM-NAME-1:5000/stein/ubuntu-source-nova-novncproxy:taco-0.1.0
        nova_novncproxy_assets: VM-NAME-1:5000/stein/ubuntu-source-nova-novncproxy:taco-0.1.0
        nova_placement: VM-NAME-1:5000/stein/ubuntu-source-nova-placement-api:taco-0.1.0
        nova_scheduler: VM-NAME-1:5000/stein/ubuntu-source-nova-scheduler:taco-0.1.0
        nova_spiceproxy: VM-NAME-1:5000/stein/ubuntu-source-nova-spicehtml5proxy:taco-0.1.0
        nova_spiceproxy_assets: VM-NAME-1:5000/stein/ubuntu-source-nova-spicehtml5proxy:taco-0.1.0
        bootstrap: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
        rabbit_init: VM-NAME-1:5000/rabbitmq:3.7-management
        nova_service_cleaner: VM-NAME-1:5000/port/ceph-config-helper:v1.15.3
      pull_policy: IfNotPresent
    bootstrap:
      structured:
        flavors:
          enabled: true
          options:
            m1_tiny:
              id: 0c84e220-a258-439f-a6ff-f8e9fd980025
    network:
      backend:
      - linuxbridge
      novncproxy:
        name: nova-novncproxy
        node_port:
          enabled: true
          port: 30608
    conf:
      hypervisor:
        host_interface: eth2
      libvirt:
        live_migration_interface: eth2
      ceph:
        enabled: true
        admin_keyring: TACO_ADMIN_KEYRING
        cinder:
          user: cinder
          keyring: AQAin8tU0CFgEhAATb7sYgtWsh+S5HEbg6MrGg==
      nova:
        DEFAULT:
          scheduler_default_filters: RetryFilter,AvailabilityZoneFilter,RamFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter
          debug: true
          dhcp_domain: ""
          config_drive_cdrom: true
          config_drive_format: iso9660
          force_config_drive: true
        vnc:
          novncproxy_base_url: http://VM-NAME-1:30608/vnc_auto.html
        libvirt:
          images_type: rbd
          rbd_user: cinder
          rbd_secret_uuid: 582393ff-9a5c-4a2e-ae0d-86ec18c36afc
          virt_type: qemu
        scheduler:
          discover_hosts_in_cells_interval: 60
        placement_database:
          max_retries: -1
          sync_on_startup: true
        placement:
          region_name: RegionOne
      rootwrap_filters: null
    endpoints:
      oslo_db:
        auth:
          admin:
            username: root
            password: password
          nova:
            username: nova
            password: password
      oslo_db_api:
        auth:
          admin:
            username: root
            password: password
          nova:
            username: nova
            password: password
      oslo_db_cell0:
        auth:
          admin:
            username: root
            password: password
          nova:
            username: nova
            password: password
      oslo_messaging:
        auth:
          admin:
            username: rabbitmq
            password: password
          nova:
            username: nova
            password: password
        statefulset: null
      identity:
        auth:
          admin:
            username: admin
            password: password
          nova:
            username: nova
            password: password
          neutron:
            username: neutron
            password: password
          ironic:
            username: ironic
            password: password
          placement:
            username: placement
            password: password
    pod:
      mandatory_access_control:
        type: null
      user:
        nova:
          uid: 42436
      security_context:
        nova:
          pod:
            runAsUser: 42436
      replicas:
        api_metadata: 3
        osapi: 3
        conductor: 3
        consoleauth: 3
        scheduler: 3
        novncproxy: 3
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm
    subpath: nova
    reference: master
  test:
    enabled: false
    timeout: 3600
  dependencies:
  - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: rabbitmq
data:
  chart_name: rabbitmq
  release: rabbitmq
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        rabbitmq: VM-NAME-1:5000/rabbitmq:3.7.13
        rabbitmq_init: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        scripted_test: VM-NAME-1:5000/rabbitmq:3.7.13-management
        prometheus_rabbitmq_expoddrter: VM-NAME-1:5000/kbudde/rabbitmq-exporter:v0.21.0
        prometheus_rabbitmq_exporter_helm_tests: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: IfNotPresent
    pod:
      replicas:
        server: 3
    volume:
      class_name: rbd
    monitoring:
      prometheus:
        enabled: false
        rabbitmq_exporter:
          scrape: false
    endpoints:
      oslo_messaging:
        auth:
          user:
            username: rabbitmq
            password: password
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm-infra
    subpath: rabbitmq
    reference: master
  test:
    enabled: false
    timeout: 3600
  dependencies:
  - helm-toolkit
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: openstack-ingress-controller
data:
  description: "OpenStack Ingress Controller"
  sequenced: False
  chart_group:
    - ingress
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: openstack-ceph-config
data:
  description: "OpenStack Ceph Config"
  sequenced: True
  chart_group:
    - ceph-provisioners
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: deploy-mariadb
data:
  description: "Mariadb"
  sequenced: True
  chart_group:
    - mariadb
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: deploy-memcached
data:
  description: "Memcached"
  sequenced: True
  chart_group:
    - memcached
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: deploy-rabbitmq
data:
  description: "RabbitMQ"
  sequenced: True
  chart_group:
    - rabbitmq
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: openstack-keystone
data:
  description: "Deploy keystone"
  sequenced: True
  chart_group:
    - keystone
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: openstack-glance
data:
  description: "Deploy glance"
  sequenced: True
  chart_group:
    - glance
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: openstack-cinder
data:
  description: "Deploy cinder"
  sequenced: True
  chart_group:
    - cinder
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: openstack-compute-kit
data:
  description: "Deploy nova and neutron, as well as supporting services"
  sequenced: False
  chart_group:
    - libvirt
    - nova
    - neutron
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: openstack-heat
data:
  description: "Deploy heat"
  sequenced: True
  chart_group:
    - heat
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: openstack-dashboard
data:
  description: "Deploy horizon"
  sequenced: True
  chart_group:
    - horizon
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: ldap
data:
  chart_name: ldap
  release: ldap
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        ldap: VM-NAME-1:5000/osixia/openldap:1.2.0
        bootstrap: VM-NAME-1:5000/osixia/openldap:1.2.0
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: Always
    storage:
      pvc:
        enabled: true
        size: 1Gi
        class_name: rbd
      host:
        data_path: /data/openstack-helm/ldap
        config_path: /data/openstack-helm/config
    bootstrap:
      enabled: enabled
    data:
      sample: |
        dn: ou=People,dc=cluster,dc=local
        objectclass: organizationalunit
        ou: People
        description: We the People

        # NOTE: Password is "password" without quotes
        dn: uid=taco,ou=People,dc=cluster,dc=local
        objectClass: inetOrgPerson
        objectClass: top
        objectClass: posixAccount
        objectClass: shadowAccount
        objectClass: person
        sn: taco
        cn: taco
        uid: taco
        userPassword: {SSHA}l6OsaU3ABgWFdUAKvnhxohExurSDKIO2
        description: SSHA
        gidNumber: 1000
        uidNumber: 1493
        homeDirectory: /home/taco
        mail: taco@yopmail.com
  source:
    type: local
    location: /home/taco/tacoplay/charts/openstack-helm-infra
    subpath: ldap
    reference: master
  test:
    enabled: true
    timeout: 3600
  dependencies:
  - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: grafana
data:
  chart_name: grafana
  release: grafana
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        grafana: VM-NAME-1:5000/grafana/grafana:5.0.0
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        db_init: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        grafana_db_session_sync: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        helm_tests: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
        selenium_tests: VM-NAME-1:5000/openstackhelm/osh-selenium:latest-ubuntu_xenial
      pull_policy: Always
    endpoints:
      oslo_db:
        auth:
          admin:
            username: root
            password: password
          user:
            username: grafana
            password: password
      oslo_db_session:
        namespace: null
        auth:
          admin:
            username: root
            password: password
          user:
            username: grafana_session
            password: password
      grafana:
        auth:
          admin:
            username: taco
            password: password
      monitoring:
        auth:
          user:
            username: taco
            password: password
      ldap:
        hosts:
          default: ldap
        auth:
          admin:
            bind: cn=taco,dc=cluster,dc=local
            password: password
    network:
      grafana:
        node_port:
          enabled: true
          port: 30009
  source:
    type: local
    location: /home/taco/tacoplay/chart/openstack-helm-infra
    subpath: grafana
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus
data:
  chart_name: prometheus
  release: prometheus
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        apache_proxy: VM-NAME-1:5000/httpd:2.4
        prometheus: VM-NAME-1:5000/prom/prometheus:v2.3.2
        helm_tests: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: IfNotPresent
    pod:
      replicas:
        prometheus: 1
    endpoints:
      monitoring:
        auth:
          admin:
            username: taco
            password: password
      ldap:
        hosts:
          default: ldap
        auth:
          admin:
            bind: cn=taco,dc=cluster,dc=local
            password: password
    storage:
      enabled: true
      pvc:
        name: prometheus-pvc
        access_mode:
        - ReadWriteOnce
      requests:
        storage: 500Gi
      storage_class: rbd
    conf:
      prometheus:
        command_line_flags:
          log.level: info
          query.max_concurrency: 20
          query.timeout: 2m
          storage.tsdb.path: /var/lib/prometheus/data
          storage.tsdb.retention: 30d
          web.enable_admin_api: true
          web.enable_lifecycle: false
        scrape_configs:
          global:
            scrape_interval: 60s
            evaluation_interval: 60s
            external_labels:
              taco_cluster: tacoplay-test
          scrape_configs:
          - job_name: prometheus-metrics
            kubernetes_sd_configs:
            - role: endpoints
            scrape_interval: 60s
            relabel_configs:
            - source_labels:
              - __meta_kubernetes_service_name
              action: keep
              regex: prom-metrics
            - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape
              action: keep
              regex: true
            - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scheme
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port
              action: replace
              target_label: __address__
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels:
              - __meta_kubernetes_namespace
              action: replace
              target_label: kubernetes_namespace
            - source_labels:
              - __meta_kubernetes_service_name
              action: replace
              target_label: instance
            - source_labels:
              - __meta_kubernetes_service_name
              action: replace
              target_label: kubernetes_name
            - source_labels:
              - __meta_kubernetes_service_name
              target_label: job
              replacement: ${1}
          - job_name: kubelet
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
            - role: node
            scrape_interval: 45s
            relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels:
              - __meta_kubernetes_node_name
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/${1}/proxy/metrics
            - source_labels:
              - __meta_kubernetes_node_name
              action: replace
              target_label: kubernetes_io_hostname
          - job_name: kubernetes-cadvisor
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
            - role: node
            relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels:
              - __meta_kubernetes_node_name
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
          - job_name: apiserver
            kubernetes_sd_configs:
            - role: endpoints
            scrape_interval: 45s
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            relabel_configs:
            - source_labels:
              - __meta_kubernetes_namespace
              - __meta_kubernetes_service_name
              - __meta_kubernetes_endpoint_port_name
              action: keep
              regex: default;kubernetes;https
          - job_name: openstack-exporter
            kubernetes_sd_configs:
            - role: endpoints
            scrape_interval: 60s
            relabel_configs:
            - source_labels:
              - __meta_kubernetes_service_name
              action: keep
              regex: openstack-metrics
            - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape
              action: keep
              regex: true
            - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scheme
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port
              action: replace
              target_label: __address__
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels:
              - __meta_kubernetes_namespace
              action: replace
              target_label: kubernetes_namespace
            - source_labels:
              - __meta_kubernetes_service_name
              action: replace
              target_label: instance
            - source_labels:
              - __meta_kubernetes_service_name
              action: replace
              target_label: kubernetes_name
            - source_labels:
              - __meta_kubernetes_service_name
              target_label: job
              replacement: ${1}
          - job_name: kubernetes-service-endpoints
            kubernetes_sd_configs:
            - role: endpoints
            scrape_interval: 60s
            relabel_configs:
            - source_labels:
              - __meta_kubernetes_service_name
              action: drop
              regex: (openstack-metrics|prom-metrics)
            - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape
              action: keep
              regex: true
            - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scheme
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port
              action: replace
              target_label: __address__
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels:
              - __meta_kubernetes_namespace
              action: replace
              target_label: kubernetes_namespace
            - source_labels:
              - __meta_kubernetes_service_name
              action: replace
              target_label: kubernetes_name
            - source_labels:
              - __meta_kubernetes_service_name
              target_label: job
              replacement: ${1}
          - job_name: kubernetes-pods
            kubernetes_sd_configs:
            - role: pod
            relabel_configs:
            - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape
              action: keep
              regex: true
            - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels:
              - __meta_kubernetes_namespace
              action: replace
              target_label: kubernetes_namespace
            - source_labels:
              - __meta_kubernetes_pod_name
              action: replace
              target_label: kubernetes_pod_name
          - job_name: calico-node
            kubernetes_sd_configs:
            - role: node
            scrape_interval: 45s
            relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - source_labels:
              - __meta_kubernetes_node_address_InternalIP
              regex: (.*)
              target_label: __address__
              replacement: ${1}:9091
            - source_labels:
              - __meta_kubernetes_node_name
              regex: (.+)
              target_label: __metrics_path__
              replacement: /metrics
            - source_labels:
              - __meta_kubernetes_node_name
              action: replace
              target_label: kubernetes_io_hostname
  source:
    type: local
    location: /home/taco/tacoplay/chart/openstack-helm-infra
    subpath: prometheus
    reference: master
  dependencies:
  - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus-alertmanager
data:
  chart_name: prometheus-alertmanager
  release: prometheus-alertmanager
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        alertmanager: VM-NAME-1:5000/prom/alertmanager:v0.11.0
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: Always
    storage:
      enabled: true
      requests:
        storage: 5Gi
      storage_class: rbd
    pod:
      mandatory_access_control:
        type: null
      replicas:
        alertmanager: 1
    conf:
      alertmanager:
        global:
          smtp_smarthost: null
          smtp_from: null
          smtp_auth_username: null
          smtp_auth_password: null
          hipchat_auth_token: null
          hipchat_api_url: null
          slack_api_url: "https://hooks.slack.com/services/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"
        templates:
          - '/etc/alertmanager/template/alert-templates.tmpl'
        route:
          group_by: ['alertname']
          group_wait: 10s
          repeat_interval: 1h
          receiver: 'default-alert'
          routes:
          - receiver: 'slack-alert'
            group_by: ['alertname']
            match:
              severity: page
        receivers:
        - name: 'default-alert'
          webhook_configs:
          - url: http://127.0.0.1
        - name: 'slack-alert'
          slack_configs:
          - channel: "#pangyo-alert"
            username: "Prometheus"
            send_resolved: true
            title: '{{ template "custom_title" . }}'
            text: '{{ template "custom_slack_message" . }}'
        - name: 'telegram-alert'
          webhook_configs:
          - send_resolved: True
            url: http://prometheus-bot:9087/alert/-GROUP_ID
      alert_templates: |-
        {{ define "__single_message_title" }}{{ range .Alerts.Firing }}{{ .Labels.alertname }} @ {{ .Annotations.identifier }}{{ end }}{{ range .Alerts.Resolved }}{{ .Labels.alertname }} @ {{ .Annotations.identifier }}{{ end }}{{ end }}

        {{ define "custom_title" }}[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if or (and (eq (len .Alerts.Firing) 1) (eq (len .Alerts.Resolved) 0)) (and (eq (len .Alerts.Firing) 0) (eq (len .Alerts.Resolved) 1)) }}{{ template "__single_message_title" . }}{{ end }}{{ end }}

        {{ define "custom_slack_message" }}
        {{ if or (and (eq (len .Alerts.Firing) 1) (eq (len .Alerts.Resolved) 0)) (and (eq (len .Alerts.Firing) 0) (eq (len .Alerts.Resolved) 1)) }}
        {{ range .Alerts.Firing }}{{ .Annotations.description }}{{ end }}{{ range .Alerts.Resolved }}{{ .Annotations.description }}{{ end }}
        {{ else }}
        {{ if gt (len .Alerts.Firing) 0 }}
        *Alerts Firing:*
        {{ range .Alerts.Firing }}- {{ .Annotations.identifier }}: {{ .Annotations.description }}
        {{ end }}{{ end }}
        {{ if gt (len .Alerts.Resolved) 0 }}
        *Alerts Resolved:*
        {{ range .Alerts.Resolved }}- {{ .Annotations.identifier }}: {{ .Annotations.description }}
        {{ end }}{{ end }}
        {{ end }}
        {{ end }}

  source:
    type: local
    location: /home/taco/tacoplay/chart/openstack-helm-infra
    subpath: prometheus-alertmanager
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus-kube-state-metrics
data:
  chart_name: prometheus-kube-state-metrics
  release: prometheus-kube-state-metrics
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        kube_state_metrics: VM-NAME-1:5000/bitnami/kube-state-metrics:1.3.1
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: IfNotPresent
    dummy: Always
  source:
    type: local
    location: /home/taco/tacoplay/chart/openstack-helm-infra
    subpath: prometheus-kube-state-metrics
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus-node-exporter
data:
  chart_name: prometheus-node-exporter
  release: prometheus-node-exporter
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        node_exporter: VM-NAME-1:5000/prom/node-exporter:v0.15.0
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: Always
    labels:
      node_exporter:
        node_selector_key: node-exporter
        node_selector_value: enabled
    pod:
      mandatory_access_control:
        type: null
      tolerations:
        node_exporter:
          enabled: true
          tolerations:
          - key: node-role.kubernetes.io/master
            operator: Exists
          - key: node-role.kubernetes.io/node
            operator: Exists
  source:
    type: local
    location: /home/taco/tacoplay/chart/openstack-helm-infra
    subpath: prometheus-node-exporter
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus-openstack-exporter
data:
  chart_name: prometheus-openstack-exporter
  release: prometheus-openstack-exporter
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        prometheus_openstack_exporter: VM-NAME-1:5000/openstackhelm/prometheus-openstack-exporter:ubuntu_bionic-20191017
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
        ks_user: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
      pull_policy: Always
    endpoints:
      identity:
        name: keystone
        auth:
          admin:
            region_name: RegionOne
            username: admin
            password: password
            project_name: admin
            user_domain_name: default
            project_domain_name: default
          user:
            role: admin
            region_name: RegionOne
            username: prometheus-openstack-exporter
            password: password
            project_name: service
            user_domain_name: default
            project_domain_name: default
    dummy: dummy
    pod:
      mandatory_access_control:
        type: null
  source:
    type: local
    location: /home/taco/tacoplay/chart/openstack-helm-infra
    subpath: prometheus-openstack-exporter
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: monitoring-infra
data:
  description: "Monitoring Infrastructure"
  sequenced: False
  chart_group:
    - ldap
    - grafana
    - prometheus
    - prometheus-alertmanager
    - prometheus-kube-state-metrics
    - prometheus-node-exporter
    - prometheus-openstack-exporter
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: elasticsearch
data:
  chart_name: elasticsearch
  release: elasticsearch
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    pod:
      mandatory_access_control:
        type: null
    images:
      tags:
        apache_proxy: VM-NAME-1:5000/httpd:2.4
        memory_init: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        curator: VM-NAME-1:5000/bobrik/curator:5.6.0
        es_cluster_wait: VM-NAME-1:5000/openstackhelm/ceph-config-helper:latest-ubuntu_xenial
        elasticsearch: VM-NAME-1:5000/openstackhelm/elasticsearch-s3:latest-5_6_4
        ceph_key_placement: VM-NAME-1:5000/port/ceph-config-helper:v1.15.3
        s3_bucket: VM-NAME-1:5000/port/ceph-config-helper:v1.15.3
        s3_user: VM-NAME-1:5000/port/ceph-config-helper:v1.15.3
        helm_tests: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        prometheus_elasticsearch_exporter: VM-NAME-1:5000/justwatch/elasticsearch_exporter:1.0.1
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        snapshot_repository: VM-NAME-1:5000/port/ceph-config-helper:v1.15.3
        elasticsearch_templates: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: IfNotPresent
    dependencies:
      static:
        curator:
          jobs: null
        tests:
          jobs: null
    conf:
      curator:
        schedule: 0 */6 * * *
        action_file:
          actions:
            1:
              action: delete_indices
              description: '"Delete indices older than 7 days"'
              options:
                timeout_override: null
                continue_if_exception: false
                ignore_empty_list: true
                disable_action: false
              filters:
              - filtertype: pattern
                kind: timestring
                value: '%Y.%m.%d'
              - filtertype: age
                source: name
                direction: older
                timestring: '%Y.%m.%d'
                unit: days
                unit_count: 14
            2:
              action: delete_indices
              description: |-
                "Delete indices by age if available disk space is
                 less than 80% total disk"
              options:
                timeout_override: 600
                continue_if_exception: false
                ignore_empty_list: true
                disable_action: false
              filters:
              - filtertype: pattern
                kind: prefix
                value: logstash-
              - filtertype: space
                source: creation_date
                use_age: true
                disk_space: 4800
            3:
              action: snapshot
              description: '"Snapshot indices older than one day"'
              options:
                repository: default_repo
                name: null
                wait_for_completion: true
                max_wait: 3600
                wait_interval: 10
                timeout_override: 600
                ignore_empty_list: true
                continue_if_exception: false
                disable_action: true
              filters:
              - filtertype: age
                source: name
                direction: older
                timestring: '%Y.%m.%d'
                unit: days
                unit_count: 1
            4:
              action: delete_snapshots
              description: '"Delete snapshots older than 30 days"'
              options:
                repository: default_repo
                disable_action: true
                timeout_override: 600
                ignore_empty_list: true
              filters:
              - filtertype: pattern
                kind: prefix
                value: curator-
                exclude: null
              - filtertype: age
                source: creation_date
                direction: older
                unit: days
                unit_count: 30
      templates:
        fluent:
          template: logstash-*
          index_patterns: logstash-*
          settings:
            number_of_shards: 5
            number_of_replicas: 1
          mappings:
            fluent:
              properties:
                kubernetes:
                  properties:
                    container_name:
                      type: keyword
                      index: true
                    docker_id:
                      type: keyword
                      index: true
                    host:
                      type: keyword
                      index: true
                    labels:
                      properties:
                        app:
                          type: keyword
                          index: true
                        application:
                          type: keyword
                          index: true
                        component:
                          type: keyword
                          index: true
                        release_group:
                          type: keyword
                          index: true
                    namespace_name:
                      type: keyword
                      index: true
                    pod_id:
                      type: keyword
                      index: true
                    pod_name:
                      type: keyword
                      index: true
                log:
                  type: text
        syslog:
          template: syslog-*
          index_patterns: syslog-*
          settings:
            number_of_shards: 3
            number_of_replicas: 1
          mappings:
            syslog:
              properties:
                cluster:
                  type: keyword
                app:
                  type: keyword
                host:
                  type: keyword
                pid:
                  type: integer
                log:
                  type: text
        libvirt:
          template: libvirt-*
          index_patterns: libvirt-*
          settings:
            number_of_shards: 3
            number_of_replicas: 1
        journal:
          template: journal-*
          index_patterns: journal-*
          settings:
            number_of_shards: 3
            number_of_replicas: 1
        kernel:
          template: kernel-*
          index_patterns: kernel-*
          settings:
            number_of_shards: 3
            number_of_replicas: 1
      elasticsearch:
        env:
          java_opts:
            client: -Xms1024m -Xmx1024m
            data: -Xms4096m -Xmx4096m
            master: -Xms512m -Xmx512m
        snapshots:
          enabled: false
    endpoints:
      elasticsearch:
        auth:
          admin:
            username: taco
            password: password
    monitoring:
      prometheus:
        enabled: true
    storage:
      enabled: true
      pvc:
        name: pvc-elastic
        access_mode:
        - ReadWriteOnce
      requests:
        storage: 2000Gi
      storage_class: rbd
  source:
    type: local
    location: /home/taco/tacoplay/chart/openstack-helm-infra
    subpath: elasticsearch
    reference: master
  test:
    enabled: false
    timeout: 3600
  dependencies:
  - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: fluentbit
data:
  chart_name: fluentbit
  release: fluentbit
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        fluentbit: VM-NAME-1:5000/fluent/fluent-bit:0.14.2
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
      pull_policy: IfNotPresent
    dependencies:
      static:
        fluentbit:
          jobs:
            - create-elasticsearch-templates
          services:
            - endpoint: internal
              service: elasticsearch
        tests:
          services:
            - endpoint: internal
              service: elasticsearch
    labels:
      fluentbit:
        node_selector_key: fluent-logging
        node_selector_value: enabled
    conf:
      fluentbit:
        template: |
          [SERVICE]
              Daemon false
              Flush 5
              Log_Level info
              Parsers_File parsers.conf

          [INPUT]
              Buffer_Chunk_Size 1M
              Buffer_Max_Size 1M
              Mem_Buf_Limit 5MB
              Name tail
              Path /var/log/kern.log
              Tag kernel

          [INPUT]
              Buffer_Chunk_Size 1M
              Buffer_Max_Size 1M
              Mem_Buf_Limit 5MB
              Name tail
              Parser docker
              Path /var/log/containers/*.log
              Tag kube.*

          [INPUT]
              Buffer_Chunk_Size 1M
              Buffer_Max_Size 1M
              Mem_Buf_Limit 5MB
              Name tail
              Path /var/log/libvirt/libvirtd.log
              Tag libvirt

          [INPUT]
              Buffer_Chunk_Size 1M
              Buffer_Max_Size 1M
              Mem_Buf_Limit 5MB
              Name tail
              Path /var/log/libvirt/qemu/*.log
              Tag qemu

          [INPUT]
              Buffer_Chunk_Size 1M
              Buffer_Max_Size 1M
              Mem_Buf_Limit 5MB
              Name systemd
              Path ${JOURNAL_PATH}
              Systemd_Filter _SYSTEMD_UNIT=kubelet.service
              Tag journal.*

          [INPUT]
              Buffer_Chunk_Size 1M
              Buffer_Max_Size 1M
              Mem_Buf_Limit 5MB
              Name systemd
              Path ${JOURNAL_PATH}
              Systemd_Filter _SYSTEMD_UNIT=docker.service
              Tag journal.*

          [FILTER]
              Interval 1s
              Match **
              Name throttle
              Rate 1000
              Window 300

          [FILTER]
              Match libvirt
              Name record_modifier
              Record hostname ${HOSTNAME}

          [FILTER]
              Match qemu
              Name record_modifier
              Record hostname ${HOSTNAME}

          [FILTER]
              Match kernel
              Name record_modifier
              Record hostname ${HOSTNAME}

          [FILTER]
              Match journal.**
              Name modify
              Rename _BOOT_ID BOOT_ID
              Rename _CAP_EFFECTIVE CAP_EFFECTIVE
              Rename _CMDLINE CMDLINE
              Rename _COMM COMM
              Rename _EXE EXE
              Rename _GID GID
              Rename _HOSTNAME HOSTNAME
              Rename _MACHINE_ID MACHINE_ID
              Rename _PID PID
              Rename _SYSTEMD_CGROUP SYSTEMD_CGROUP
              Rename _SYSTEMD_SLICE SYSTEMD_SLICE
              Rename _SYSTEMD_UNIT SYSTEMD_UNIT
              Rename _TRANSPORT TRANSPORT
              Rename _UID UID

          [OUTPUT]
              Match **.fluentd**
              Name null

          [FILTER]
              Match kube.*
              Merge_JSON_Log true
              Name kubernetes

          [INPUT]
              Buffer_Chunk_Size 1M
              Buffer_Max_Size 1M
              Mem_Buf_Limit 5MB
              Name tail
              Parser syslog-kubelet
              Path /var/log/messages
              Tag syslog.*

          [INPUT]
              Buffer_Chunk_Size 1M
              Buffer_Max_Size 1M
              Mem_Buf_Limit 5MB
              Name tail
              Parser syslog-kubelet
              Path /var/log/syslog
              Tag syslog.*

          [FILTER]
              Match *
              Name record_modifier
              record cluster tacoplay-test

          [OUTPUT]
              HTTP_Passwd password
              HTTP_User taco
              Host elasticsearch-logging
              Logstash_Format true
              Match kube.*
              Name es
              Port 80
              Type fluent

          [OUTPUT]
              HTTP_Passwd password
              HTTP_User taco
              Host elasticsearch-logging
              Logstash_Format true
              Logstash_Prefix syslog
              Match syslog.*
              Name es
              Port 80
              Type syslog

          [OUTPUT]
              HTTP_Passwd password
              HTTP_User taco
              Host elasticsearch-logging
              Logstash_Format true
              Logstash_Prefix libvirt
              Match libvirt
              Name es
              Port 80
              Type libvirt

          [OUTPUT]
              HTTP_Passwd password
              HTTP_User taco
              Host elasticsearch-logging
              Logstash_Format true
              Logstash_Prefix qemu
              Match qemu.*
              Name es
              Port 80
              Type qemu

          [OUTPUT]
              HTTP_Passwd password
              HTTP_User taco
              Host elasticsearch-logging
              Logstash_Format true
              Logstash_Prefix journal
              Match journal.*
              Name es
              Port 80
              Type journal

          [OUTPUT]
              HTTP_Passwd password
              HTTP_User taco
              Host elasticsearch-logging
              Logstash_Format true
              Logstash_Prefix kernel
              Match kernel.*
              Name es
              Port 80
              Type kernel

      parsers:
        template: |
          [PARSER]
            Decode_Field_As escaped_utf8 log
            Format json
            Name docker
            Time_Format %Y-%m-%dT%H:%M:%S.%L
            Time_Keep true
            Time_Key time
          [PARSER]
            NAME syslog-kubelet
            Format regex
            Regex '^(?<time>.*[0-9]{2}:[0-9]{2}:[0-9]{2}) (?<host>[^ ]*) (?<app>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? (?<log>.+)$'
            Time_Key time
            Time_Format '%b %e %H:%M:%S'
            Time_Keep On
            Decode_Field_As escaped_utf8 log

    pod:
      tolerations:
        fluentbit:
          enabled: true
          tolerations:
          - key: node-role.kubernetes.io/master
            operator: Exists
          - key: node-role.kubernetes.io/node
            operator: Exists
    endpoints:
      elasticsearch:
        namespace: null
        name: elasticsearch
        auth:
          admin:
            username: taco
            password: password
        hosts:
          data: elasticsearch-data
          default: elasticsearch-logging
          discovery: elasticsearch-discovery
          public: elasticsearch
        host_fqdn_override:
          default: null
        path:
          default: null
        scheme:
          default: http
        port:
          http:
            default: 80
  source:
    type: local
    location: /home/taco/tacoplay/chart/openstack-helm-infra
    subpath: fluentbit
    reference: master
  test:
    enabled: false
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: kibana
data:
  chart_name: kibana
  release: kibana
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        apache_proxy: VM-NAME-1:5000/httpd:2.4
        kibana: VM-NAME-1:5000/kibana:5.6.4
        dep_check: VM-NAME-1:5000/airshipit/kubernetes-entrypoint:v1.0.0
        image_repo_sync: VM-NAME-1:5000/docker:17.07.0
        register_kibana_indexes: VM-NAME-1:5000/stein/ubuntu-source-heat-engine:taco-0.1.0
      pull_policy: IfNotPresent
    endpoints:
      elasticsearch:
        auth:
          admin:
            username: taco
            password: password
    network:
      kibana:
        ingress:
          public: true
          proxy_body_size: 1024M
        node_port:
          enabled: true
          port: 30001
        port: 5601
  source:
    type: local
    location: /home/taco/tacoplay/chart/openstack-helm-infra
    subpath: kibana
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: logging-infra
data:
  description: "Logging Infrastructure"
  sequenced: False
  chart_group:
    - elasticsearch
    - fluentbit
    - kibana
---
schema: armada/Manifest/v1
metadata:
  schema: metadata/Document/v1
  name: taco-manifest
data:
  release_prefix: taco
  chart_groups:
    - openstack-ingress-controller
    - openstack-ceph-config
    - deploy-mariadb
    - deploy-memcached
    - deploy-rabbitmq
    - openstack-keystone
    - openstack-glance
    - openstack-cinder
    - openstack-compute-kit
    - openstack-heat
    - openstack-dashboard
    - monitoring-infra
    - logging-infra
