---
- hosts: localhost:all
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  tasks:
    - name: include global override files
      include_vars: "{{ item }}"
      loop:
        - "{{ playbook_dir }}/vars/global_taco.yml"
        - "{{ playbook_dir }}/vars/global_docker.yml"
        - "{{ playbook_dir }}/vars/global_ceph.yml"
        - "{{ playbook_dir }}/vars/global_k8s-cluster.yml"
        - "{{ playbook_dir }}/vars/site_specific.yml"

    - name: include global override files
      include_vars: "{{ item }}"
      loop:
        - "{{ playbook_dir }}/vars/global_k8s-images.yml"
      when: groups['registry'] is defined and (groups['registry'] | length > 0)
  tags: always

# Prepare armada-manifests and then run armada apply
- hosts: admin-node
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  roles:
    - { role: openstack/openstack-defaults, tags: openstack }
    - { role: armada/apply, tags: armada }

- hosts: admin-node:controller-node
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  tasks:
    - name: check host where ingress controller is running
      shell: >-
        {{ bin_dir }}/kubectl get po -n openstack -o wide |
        grep "^ingress-[^error]" |
        awk '{print $6}'
      retries: 10
      delay: 10
      register: ingress_host
      until: ingress_host.stdout != ""
      become: no
      delegate_to: "{{ groups['admin-node']|first }}"
      when: auto_release_enabled|default(true)

    - fail:
        msg: "ingress controller is not running"
      when: auto_release_enabled|default(true) and ingress_host.stdout == ""

    - name: get ingress configmap
      shell: >-
        {{ bin_dir }}/kubectl get cm ingress-conf -n openstack -o json
      retries: 10
      delay: 5
      register: configmap_raw
      become: no
      delegate_to: "{{ groups['admin-node']|first }}"
      until: configmap_raw.rc == 0

    - name: extract configmap result
      set_fact:
        result: "{{ configmap_raw.stdout | from_json }}"

    - name: set fact of bind-address
      set_fact:
        bind_address: "{{ result['data']['bind-address'] }}"

    - name: update hosts file for openstack services with ingress node ip
      blockinfile:
        path: /etc/hosts
        block: |
          {{ ingress_host.stdout }} keystone.openstack.svc.cluster.local
          {{ ingress_host.stdout }} glance.openstack.svc.cluster.local
          {{ ingress_host.stdout }} nova.openstack.svc.cluster.local
          {{ ingress_host.stdout }} neutron.openstack.svc.cluster.local
          {{ ingress_host.stdout }} cinder.openstack.svc.cluster.local
        state: present
        marker: "# OPENSTACK SERVICES {mark}"
      when: auto_release_enabled|default(true) and bind_address == ""

    - name: update hosts file for openstack services with ingress vip
      blockinfile:
        path: /etc/hosts
        block: |
          {{ bind_address }} keystone.openstack.svc.cluster.local
          {{ bind_address }} glance.openstack.svc.cluster.local
          {{ bind_address }} nova.openstack.svc.cluster.local
          {{ bind_address }} neutron.openstack.svc.cluster.local
          {{ bind_address }} cinder.openstack.svc.cluster.local
        state: present
        marker: "# OPENSTACK SERVICES {mark}"
      when: auto_release_enabled|default(true) and bind_address != ""
  tags: openstack
